//console.log("Hello world");
//setTimeout(function() {console.log("Hello again!")}, 5000);
//anipulating_video_using_canvas$edit"}}, {"id": 127651, "title": "Promise.race()", "slug": "Web/JavaScript/Reference/Objets_globaux/Promise/race", "locale": "fr", "url": "https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Promise/race", "edit_url": "https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Promise/race$edit", "excerpt": "exemples avec <mark>setTimeout</mark>\n\nvar p1 = new Promise(function(resolve, reject) { \n    <mark>setTimeout</mark>(resolve, 500\u2026new Promise(function(resolve, reject) { \n    <mark>setTimeout</mark>(resolve, 100, \"deux\"); \n});\n\nPromise.race([p1\u2026new Promise(function(resolve, reject) { \n    <mark>setTimeout</mark>(resolve, 100, \"trois\");\n});\nvar p4 = new Pro\u2026Promise(function(resolve, reject) { \n    <mark>setTimeout</mark>(reject, 500, \"quatre\"); \n});\n\nPromise.race([p3, p4])\u2026new Promise(function(resolve, reject) { \n    <mark>setTimeout</mark>(resolve, 500, \"cinq\"); \n});\nvar p6 = new Pro", "tags": ["Reference", "Experimental", "R\u00e9f\u00e9rence", "Exp\u00e9rimental", "JavaScript", "Promise", "ECMAScript6", "Method"], "score": 0.15392339, "explanation": null, "parent": {"id": 127395, "title": "Promise.race()", "slug": "Web/JavaScript/Reference/Global_Objects/Promise/race", "locale": "en-US", "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race", "edit_url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race$edit"}}, {"id": 56377, "title": "Firefox Security Guidelines", "slug": "Security/Firefox_Security_Guidelines", "locale": "en-US", "url": "https://developer.mozilla.org/en-US/docs/Security/Firefox_Security_Guidelines", "edit_url": "https://developer.mozilla.org/en-US/docs/Security/Firefox_Security_Guidelines$edit", "excerpt": "   <mark>setTimeout</mark>(string, time)\n          Very High\n          Acts like eval\n          Use <mark>setTimeout</mark>(function", "tags": ["Security"], "score": 0.14291124, "explanation": null, "parent": {}}, {"id": 41941, "title": "Questions and answers from the newsgroups 2006 10 20", "slug": "Extensions/Questions_and_answers_from_the_newsgroups_2006_10_20", "locale": "en-US", "url": "https://developer.mozilla.org/en-US/docs/Extensions/Questions_and_answers_from_the_newsgroups_2006_10_20", "edit_url": "https://developer.mozilla.org/en-US/docs/Extensions/Questions_and_answers_from_the_newsgroups_2006_10_20$edit", "excerpt": "when working with JavaScript callbacks. Both <mark>setTimeout</mark>( fn, ... ) and addEventListener(receiver, fn\u2026fn, .. ) have this problem. In the case of <mark>setTimeout</mark> fn is called with this equal to the window. In the", "tags": [], "score": 0.13164082, "explanation": null, "parent": {}}, {"id": 41942, "title": "Questions and answers from the newsgroups 2006 10 13", "slug": "Extensions/Questions_and_answers_from_the_newsgroups_2006_10_13", "locale": "en-US", "url": "https://developer.mozilla.org/en-US/docs/Extensions/Questions_and_answers_from_the_newsgroups_2006_10_13", "edit_url": "https://developer.mozilla.org/en-US/docs/Extensions/Questions_and_answers_from_the_newsgroups_2006_10_13$edit", "excerpt": "when working with JavaScript callbacks. Both <mark>setTimeout</mark>( fn, ... ) and addEventListener(receiver, fn\u2026fn, .. ) have this problem. In the case of <mark>setTimeout</mark> fn is called with this equal to the window. In the", "tags": [], "score": 0.122869425, "explanation": null, "parent": {}}, {"id": 87099, "title": "timers", "slug": "Mozilla/Add-ons/SDK/High-Level_APIs/timers", "locale": "en-US", "url": "https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/SDK/High-Level_APIs/timers", "edit_url": "https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/SDK/High-Level_APIs/timers$edit", "excerpt": "been called.\n\nExample\n\nvar { <mark>setTimeout</mark> } = require(\"sdk/timers\");\n\n<mark>setTimeout</mark>(function() {\n  // do something\u2026: integer\n An ID returned from <mark>setTimeout</mark>().\n\nExample\n\nvar { <mark>setTimeout</mark>, clearTimeout } = require(\"sdk/timers\");\u2026periodic timers.\n\nGlobals\n\nConstructors\n\nFunctions\n\n<mark>setTimeout</mark>(callback, ms)\n\nSchedules callback to be called\u2026\nclearTimeout(ID)\n\nGiven an ID returned from <mark>setTimeout</mark>(), prevents the callback with the ID from being\u2026require(\"sdk/timers\");\n\nvar id = <mark>setTimeout</mark>(function() {\n  // do something in 1 sec\n}, 1000);\n\n// to stop/cancel", "tags": ["Add-on SDK"], "score": 0.12053736, "explanation": null, "parent": {}}, {"id": 3181, "title": "Common causes of memory leaks in extensions", "slug": "Extensions/Common_causes_of_memory_leaks_in_extensions", "locale": "en-US", "url": "https://developer.mozilla.org/en-US/docs/Extensions/Common_causes_of_memory_leaks_in_extensions", "edit_url": "https://developer.mozilla.org/en-US/docs/Extensions/Common_causes_of_memory_leaks_in_extensions$edit", "excerpt": "weak references.\n\nBe careful with setInterval/<mark>setTimeout</mark>\n\nUsing window.setInterval() or window.setTimeout()\u2026Another solution would be to use the setInterval()/<mark>setTimeout</mark>() instances content windows provide, but there", "tags": ["Extensions", "Add-ons", "memory"], "score": 0.11275237, "explanation": null, "parent": {}}, {"id": 127395, "title": "Promise.race()", "slug": "Web/JavaScript/Reference/Global_Objects/Promise/race", "locale": "en-US", "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race", "edit_url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race$edit", "excerpt": "examples with <mark>setTimeout</mark>\n\nvar p1 = new Promise(function(resolve, reject) { \n    <mark>setTimeout</mark>(resolve, 500\u2026new Promise(function(resolve, reject) { \n    <mark>setTimeout</mark>(resolve, 100, \"two\"); \n});\n\nPromise.race([p1\u2026new Promise(function(resolve, reject) { \n    <mark>setTimeout</mark>(resolve, 100, \"three\");\n});\nvar p4 = new Pro\u2026Promise(function(resolve, reject) { \n    <mark>setTimeout</mark>(reject, 500, \"four\"); \n});\n\nPromise.race([p3, p4]).\u2026new Promise(function(resolve, reject) { \n    <mark>setTimeout</mark>(resolve, 500, \"five\"); \n});\nvar p6 = new Pro", "tags": ["Promise", "ECMAScript6", "Experimental", "Method", "JavaScript"], "score": 0.10167302, "explanation": null, "parent": {}};

var request = require('request');

/*request('https://developer.mozilla.org/fr/search.json?q=settimeout', function (error, response, body) {
  if (!error && response.statusCode === 200) {
      var results = JSON.parse(body);
      //console.log(result);
      var documents = results.documents;
      
      for (var i = 0; i < documents.length; i ++) {
          console.log(documents[i].title);
      }
  }
})
*/

request("http://api.open-notify.org/iss-now.json", function (err, res, bod){
    if (!err) {
        var issInfo = JSON.parse(bod);
        console.log("The ISS is at: " issInfo.iss_position.latitude + "x" + issInfo.iss_position.longitude);
    }  //onsole.log ("error")
    
});